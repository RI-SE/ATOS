atos:
  journal_control:
    ros__parameters:
      scenario_name: ""
  esmini_adapter:
    ros__parameters:
      open_scenario_file: "GaragePlanScenario.xosc"
  object_control:
    ros__parameters:
      max_missing_heartbeats: 100
      transmitter_id: 15
  osi_adapter:
    ros__parameters:
      address: "0.0.0.0"
      port: 55555
      protocol: "tcp"
      frequency: 100
  mqtt_bridge:
    ros__parameters:
      broker:
        host: 127.0.0.1
        port: 1883
      client:
        id: "ATOS"
        username: ""
        password: ""
      mqtt2ros:            # Object specifying which MQTT topics to map to which ROS topics
        mqtt_topics:         # Array specifying which ROS topics to bridge
          - placeholder # The MQTT topic that should be bridged, corresponds to the sub-object in the YAML
        drone_supervisor/estop:
          ros_topic: placeholder # ROS topic on which corresponding MQTT messages are published
          advanced:
            mqtt:
              qos: 1               # [0] MQTT QoS value
            ros:
              queue_size: 1        # [1] ROS publisher queue size
  trajectorylet_streamer:
    ros__parameters:
      chunk_duration: 2.0
  pointcloud_publisher:
    ros__parameters:
      pointcloud_files: [""]
  integration_testing_handler:
    ros__parameters:
      scenario_execution: true
  back_to_start:
    ros__parameters:
      turn_radius: 5.0
      min_speed: 4.0
      max_speed: 12.0