cmake_minimum_required(VERSION 3.8)
set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

project(MaestroCommon LANGUAGES C CXX)

include(GNUInstallDirs)

set(MAESTRO_COMMON_TARGET ${TARGET_NAMESPACE}${PROJECT_NAME})
set(MAESTRO_UTIL_TARGET ${TARGET_NAMESPACE}MaestroCoreUtil)

find_package(Eigen3 REQUIRED IMPORTED)
set(LOGGING_LIBRARY MaestroLogging)
set(TIME_LIBRARY MaestroTime)
set(MESSAGE_BUS_LIBRARY MaestroMQ)
set(SHARED_MEMORY_LIBRARY MaestroSHM)
set(ISO_22133_LIBRARY ISO22133)
set(MATH_LIBRARY m)
set(FILESYSTEM_LIBRARY stdc++fs)
set(PTHREAD_LIBRARY pthread)

get_target_property(TIME_HEADERS ${TIME_LIBRARY} INCLUDE_DIRECTORIES)
get_target_property(LOGGING_HEADERS ${LOGGING_LIBRARY} INCLUDE_DIRECTORIES)
get_target_property(MESSAGE_BUS_HEADERS ${MESSAGE_BUS_LIBRARY} INCLUDE_DIRECTORIES)
get_target_property(SHARED_MEMORY_HEADERS ${SHARED_MEMORY_LIBRARY} INCLUDE_DIRECTORIES)
get_target_property(ISO_22133_HEADERS ${ISO_22133_LIBRARY} INCLUDE_DIRECTORIES)

add_library(${MAESTRO_UTIL_TARGET} SHARED
	${CMAKE_CURRENT_SOURCE_DIR}/util.c
	${CMAKE_CURRENT_SOURCE_DIR}/journal.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/datadictionary.c
)
target_include_directories(${MAESTRO_UTIL_TARGET} PUBLIC
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/inc>
	$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
	${TIME_HEADERS}
	${LOGGING_HEADERS}
	${MESSAGE_BUS_HEADERS}
    ${ISO_22133_HEADERS}
	${SHARED_MEMORY_HEADERS}
)
set_target_properties(${MAESTRO_UTIL_TARGET} PROPERTIES
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/util.h
)
set_property(TARGET ${MAESTRO_UTIL_TARGET} APPEND PROPERTY
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/journal.h
)
set_property(TARGET ${MAESTRO_UTIL_TARGET} APPEND PROPERTY
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/datadictionary.h
)

target_link_libraries(${MAESTRO_UTIL_TARGET} LINK_PUBLIC
	${TIME_LIBRARY}
	${LOGGING_LIBRARY}
	${MESSAGE_BUS_LIBRARY}
	${MATH_LIBRARY}
	${ISO_22133_LIBRARY}
	${SHARED_MEMORY_LIBRARY}
)


add_library(${MAESTRO_COMMON_TARGET} SHARED
	${CMAKE_CURRENT_SOURCE_DIR}/trajectory.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/objectconfig.cpp	
)

target_link_libraries(${MAESTRO_COMMON_TARGET}
	${LOGGING_LIBRARY}
	${MAESTRO_UTIL_TARGET}
	${EIGEN_LIBRARY}
	${FILESYSTEM_LIBRARY}
)

target_include_directories(${MAESTRO_COMMON_TARGET} PUBLIC
	${CMAKE_CURRENT_SOURCE_DIR}
)
set_property(TARGET ${MAESTRO_COMMON_TARGET} APPEND PROPERTY
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/trajectory.hpp
)
set_property(TARGET ${MAESTRO_COMMON_TARGET} APPEND PROPERTY
        PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/objectconfig.hpp
)
set_property(TARGET ${MAESTRO_COMMON_TARGET} APPEND PROPERTY
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/regexpatterns.hpp
)

target_include_directories(${MAESTRO_UTIL_TARGET} PUBLIC
	${CMAKE_CURRENT_SOURCE_DIR}
)
set_property(TARGET ${MAESTRO_UTIL_TARGET} APPEND PROPERTY
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/datadictionary.h
)
set_property(TARGET ${MAESTRO_UTIL_TARGET} APPEND PROPERTY
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/journal.h
)
set_property(TARGET ${MAESTRO_UTIL_TARGET} APPEND PROPERTY
	PUBLIC_HEADER ${CMAKE_CURRENT_SOURCE_DIR}/util.h
)

# Tests
add_executable(test_relativetrajectory tests/test_relativetrajectory.cpp)
add_test(relative_trajectory_point_test
	${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/test_relativetrajectory)
target_link_libraries(test_relativetrajectory
	${MAESTRO_COMMON_TARGET}
)
# Installation rules
install(CODE "MESSAGE(STATUS \"Installing target ${MAESTRO_UTIL_TARGET}\")")
install(TARGETS ${MAESTRO_UTIL_TARGET}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)
install(CODE "MESSAGE(STATUS \"Installing target ${MAESTRO_COMMON_TARGET}\")")
install(TARGETS ${MAESTRO_COMMON_TARGET}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)
